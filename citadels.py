
import telebot
import random as ran
import time
import quarters as q
import keyboards as key
import requests

TG_TOKEN = '1648834181:AAHnaFSNiQSx5LEWVhKRL4N9I2t4P3q8pFw'
bot = telebot.TeleBot(TG_TOKEN)

class Player():
    def __init__(self):
        self.name = ''
        self.id = ''
        self.chars = []
        self.quarts = []
        self.b_quarts = []
        self.coins = 0
        self.score = 0
    
    def __str__(self):
        return (self.name + self.coins*'üèÖ' + len(self.quarts)*'üÉè' + '\n' + '\n'.join(map(str, self.b_quarts))+'\n\n')

    def add_quart(self, quart):
        self.quarts.append(quart)

cur_player = Player()

thief = Player()

destr_player = Player()

grave_owner = Player()

first_builder = Player()

CHARACTERS = [
        '1Ô∏è‚É£ '+'–ê—Å—Å–∞—Å–∏–Ω ' + chr(0x1F977),
        '2Ô∏è‚É£ '+'–í–æ—Ä ' + chr(0x1F9B9),
        '3Ô∏è‚É£ '+'–ß–∞—Ä–æ–¥–µ–π ' + chr(0x1F9D9),
        '4Ô∏è‚É£ '+'–ö–æ—Ä–æ–ª—å ' +  chr(0x1F934) ,
        '5Ô∏è‚É£ '+'–ï–ø–∏—Å–∫–æ–ø '  + chr(0x1F473),
        '6Ô∏è‚É£ '+'–ö—É–ø–µ—Ü '  + chr(0x1F935),
        '7Ô∏è‚É£ '+'–ó–æ–¥—á–∏–π '  + chr(0x1F477),
        '8Ô∏è‚É£ '+'–ö–æ–Ω–¥–æ—Ç—å–µ—Ä '  +  chr(0x1F482),
        ]

ACTIVE_CHARS = [
        '1Ô∏è‚É£ '+'–ê—Å—Å–∞—Å–∏–Ω ' + chr(0x1F977),
        '2Ô∏è‚É£ '+'–í–æ—Ä ' + chr(0x1F9B9),
        '3Ô∏è‚É£ '+'–ß–∞—Ä–æ–¥–µ–π ' + chr(0x1F9D9),
        '4Ô∏è‚É£ '+'–ö–æ—Ä–æ–ª—å ' +  chr(0x1F934) ,
        '5Ô∏è‚É£ '+'–ï–ø–∏—Å–∫–æ–ø '  + chr(0x1F473),
        '6Ô∏è‚É£ '+'–ö—É–ø–µ—Ü '  + chr(0x1F935),
        '7Ô∏è‚É£ '+'–ó–æ–¥—á–∏–π '  + chr(0x1F477),
        '8Ô∏è‚É£ '+'–ö–æ–Ω–¥–æ—Ç—å–µ—Ä '  +  chr(0x1F482),
        ]

OPENED_CARDS = []

players_id = []

players_names = []

start_voters = []

Players = []

waiters_names = []

selected_chars = []

waiters_id = [] 

taken_cards = []

CLOSED_CARD = []

robbed_char = ''

destr_quart = ''

choising = True

rounds_start = True 

draft_start = True

games_start = True

moves_start = True

spec_feat = True

quart_building = True

coins_or_cards = True

start_sync = True

mes_sync = True

collect_coins = False

playing = False

swapping = False

game_Is_Started = False

quart_choising = False

enough_coins = False

char_feat = False

taking_cards = False

killing = False

stealing = False

swap_player = False

player_destr = False

quart_destr = False

have_type_q = False

lab = False

using_lab = False

smithy = False

grave = False

last_round = False

arch_builds = 3

round_index = 1

destr_cost = 1

char_index = 0

draft_index = 0

remove_keyboard = telebot.types.ReplyKeyboardRemove(True)

keyboard8 = telebot.types.ReplyKeyboardRemove(True)

keyboard9 = telebot.types.ReplyKeyboardMarkup(True)

keyboard12 = telebot.types.ReplyKeyboardMarkup(True)

def kill_steal_keyboard():
    
    global keyboard12
    global CLOSED_CARD

    keyboard12 = telebot.types.ReplyKeyboardMarkup(True)

    for i in range(CHARACTERS.index(selected_chars[char_index]) + 1, len(CHARACTERS)):
       if CHARACTERS[i] not in CLOSED_CARD and ( CHARACTERS[i] not in OPENED_CARDS):
           keyboard12.row(CHARACTERS[i])

def swap_keyboard():
    global keyboard12

    keyboard12 = telebot.types.ReplyKeyboardMarkup(True)

    if swapping:
        keyboard12.row('–£ –∏–≥—Ä–æ–∫–∞ üë§')
        keyboard12.row('–ò–∑ –∫–æ–ª–æ–¥—ã üì§')

    if swap_player:
        for player in Players:
            if player.id != cur_player.id:
                keyboard12.row(player.name)

    keyboard12.row('–û—Ç–º–µ–Ω–∞')

def reload_keyboard():
    global keyboard8
    
    keyboard8 = telebot.types.ReplyKeyboardMarkup(True)

    if playing:
        keyboard8.row('–ú–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ üë§')

    keyboard8.row('–ò–≥—Ä–æ–∫–∏ üë•','–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ üé≠')
    
    for i in range(0, len(ACTIVE_CHARS), 2):
        if (i+1) == len(ACTIVE_CHARS):
            keyboard8.row(ACTIVE_CHARS[i])
        else:
            keyboard8.row(ACTIVE_CHARS[i], ACTIVE_CHARS[i+1])

    keyboard8.row('–í—ã—Ö–æ–¥')

def draft3_7():
    
    global ACTIVE_CHARS
    global OPENED_CARDS
    global CLOSED_CARD

    if len(players_id) != 7 and (len(players_id) != 3):
        CLOSED_CARD = []
        CLOSED_CARD.append(ran.choice(ACTIVE_CHARS))
        ACTIVE_CHARS.remove(CLOSED_CARD[0])
            
        for i in range(0,6-len(players_id)):
            rand_card = ran.choice(ACTIVE_CHARS)

            OPENED_CARDS.append(rand_card)
            ACTIVE_CHARS.remove(rand_card)
    else:
        CLOSED_CARD = ran.choice(ACTIVE_CHARS)
        ACTIVE_CHARS.remove(CLOSED_CARD)


    OPENED_CARDS.sort()
    ACTIVE_CHARS.sort()

def send_to_all_membs(message, keyboard = ''):
    if keyboard == '':
        for player in players_id + waiters_id:
                bot.send_message(player, message)
    else:
        for player in players_id + waiters_id:
            if player in waiters_id:
                bot.send_message(player, message, reply_markup = key.keyboard7)
            else:
                bot.send_message(player, message, reply_markup = keyboard)

def your_turn():
    global draft_start
    global ACTIVE_CHARS
    global CLOSED_CARD

    if draft_index == 6:
        ACTIVE_CHARS += CLOSED_CARD
        ACTIVE_CHARS.sort()

    if draft_start and (draft_index < len(players_id)):
        bot.send_message(players_id[draft_index], '–í–∞—à–∞ –æ—á–µ—Ä–µ–¥—å –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å.', reply_markup = keyboard8)

        for i in range(len(players_id)):
            if i != draft_index:
                bot.send_message(players_id[i], players_names[draft_index] + ' –≤—ã–±–∏—Ä–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞', reply_markup = key.keyboard7)

        for player in waiters_id:
            bot.send_message(player, players_names[draft_index] + ' –≤—ã–±–∏—Ä–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞', reply_markup = key.keyboard7)

        draft_start = False
        CLOSED_CARD = []

def draft_quarts():

    for player in Players:
        for k in range(0,4):
            _rand_quart = ran.choice(q.quarts)
            player.add_quart(_rand_quart)
            q.quarts.remove(_rand_quart)

        bot.send_message(player.id, '–ö–≤–∞—Ä—Ç–∞–ª—ã —É –í–∞—Å –Ω–∞ —Ä—É–∫–∞—Ö:\n\n'+'\n'.join(map(str, player.quarts)))

def char_chosen(message, chat_id):
        
        message = str(message)

        global draft_start
        global draft_index
        global ACTIVE_CHARS
        global playing
        global selected_chars
        global moves_start

        if ((('1Ô∏è‚É£ '+'–∞—Å—Å–∞—Å–∏–Ω ' + chr(0x1F977) == message.lower()) or
                ('2Ô∏è‚É£ '+'–≤–æ—Ä ' + chr(0x1F9B9)== message.lower()) or
                ('3Ô∏è‚É£ '+'—á–∞—Ä–æ–¥–µ–π ' + chr(0x1F9D9)== message.lower()) or
                ('4Ô∏è‚É£ '+'–∫–æ—Ä–æ–ª—å ' +  chr(0x1F934) == message.lower()) or
                ('5Ô∏è‚É£ '+'–µ–ø–∏—Å–∫–æ–ø '  + chr(0x1F473) == message.lower()) or
                ('6Ô∏è‚É£ '+'–∫—É–ø–µ—Ü '  + chr(0x1F935) == message.lower()) or
                ('7Ô∏è‚É£ '+'–∑–æ–¥—á–∏–π '  + chr(0x1F477) == message.lower()) or
                ('8Ô∏è‚É£ '+'–∫–æ–Ω–¥–æ—Ç—å–µ—Ä '  +  chr(0x1F482) == message.lower())) and
                (chat_id == players_id[draft_index]) and 
                (message in ACTIVE_CHARS)):

            bot.send_message(players_id[draft_index], '–û—Ç–ª–∏—á–Ω–æ!\n–í —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ –≤—ã ' + message, reply_markup = key.keyboard7)

            for player in Players:
                if player.id == chat_id:
                    player.chars.append(message)
            
            selected_chars.append(message)
            selected_chars.sort()
                       
            ACTIVE_CHARS.remove(message)
            ACTIVE_CHARS.sort()
                    
            draft_index = (draft_index + 1)%len(players_id)

            if len(ACTIVE_CHARS) == 1:
                send_to_all_membs("–í—ã–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∑–∞–∫–æ–Ω—á–µ–Ω")
                moves_start = True
                draft_start = False
                ACTIVE_CHARS.clear()
                playing = True
            else:
                draft_start = True

            reload_keyboard()

def draft2():
    global ACTIVE_CHARS
    closed = ran.choice(ACTIVE_CHARS)
    ACTIVE_CHARS.remove(closed)

def reload_play_keyboard():

    global keyboard9

    keyboard9 = telebot.types.ReplyKeyboardMarkup(True)

    keyboard9.row('–ú–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ üë§' )

    keyboard9.row('–ò–≥—Ä–æ–∫–∏ üë•', '–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ üé≠')
    
    if coins_or_cards:
        keyboard9.row('–ú–æ–Ω–µ—Ç—ã üèÖüèÖ', '–ö–∞—Ä—Ç—ã üÉèüÉè')

    if quart_building and enough_coins and (arch_builds > 0) and len(cur_player.quarts):
        keyboard9.row('–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª üî®')

    if spec_feat:

        if selected_chars[char_index] == CHARACTERS[0]:
            keyboard9.row('–£–±–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üó°')
        
        if selected_chars[char_index] == CHARACTERS[1]:
            keyboard9.row('–û–±–≤–æ—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üí∞')

        if selected_chars[char_index] == CHARACTERS[2]:
            keyboard9.row('–û–±–º–µ–Ω—è—Ç—å –∫–∞—Ä—Ç—ã üîÉüÉè')

        if selected_chars[char_index] == CHARACTERS[7]:
            keyboard9.row('–†–∞–∑—Ä—É—à–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª ü™ì')

    if collect_coins and have_type_q:
        keyboard9.row('–°–æ–±—Ä–∞—Ç—å –º–æ–Ω–µ—Ç—ã —Å –∫–≤–∞—Ä—Ç–æ–ª–æ–≤ üèÖ')

    if lab and len(cur_player.quarts):
        keyboard9.row('–°–±—Ä–æ—Å–∏—Ç—å –∫–∞—Ä—Ç—É üÉè')

    if smithy:
        keyboard9.row('–ü–æ–ª—É—á–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª—ã üÉè')

    if char_feat and not grave:
        keyboard9.row('–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ö–æ–¥ ‚ùå')

    keyboard9.row('–í—ã—Ö–æ–¥')

def dest_player_key():
    global keyboard12

    keyboard12 = telebot.types.ReplyKeyboardMarkup(True)

    for player in Players:
        if CHARACTERS[4] not in player.chars and len(player.b_quarts) and (len(player.b_quarts) < 7):
            keyboard12.row(player.name)
    keyboard12.row('–û—Ç–º–µ–Ω–∞')

def dest_quart_key():
    global keyboard12

    keyboard12 = telebot.types.ReplyKeyboardMarkup(True)

    for quart in destr_player.b_quarts:
        if cur_player.coins >= quart.cost - destr_cost and (quart != q.fort):
            keyboard12.row(quart.name)
    keyboard12.row('–û—Ç–º–µ–Ω–∞')

def lab_key():
    global keyboard12

    keyboard12 = telebot.types.ReplyKeyboardMarkup(True)

    for quart in cur_player.quarts:
        keyboard12.row(quart.name)

    keyboard12.row('–û—Ç–º–µ–Ω–∞')

@bot.message_handler(commands=['start'])
def start(message):
    with open('main.jpg', 'rb') as ph:
        photo = ph.read()
    if message.chat.id not in players_id+waiters_id:
        bot.send_photo(message.chat.id, photo, caption = '''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "–¶–∏—Ç–∞–¥–µ–ª–∏"!

–ò–≥—Ä–∞ –æ —Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö, –±–ª–∞–≥–æ—Ä–æ–¥—Å—Ç–≤–µ –∏ –∏–Ω—Ç—Ä–∏–≥–∞—Ö.
    ''', reply_markup = key.keyboard1)
    else:
         bot.send_photo(message.chat.id, photo, caption = '''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "–¶–∏—Ç–∞–¥–µ–ª–∏"!

–ò–≥—Ä–∞ –æ —Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö, –±–ª–∞–≥–æ—Ä–æ–¥—Å—Ç–≤–µ –∏ –∏–Ω—Ç—Ä–∏–≥–∞—Ö.
    ''')

@bot.message_handler(content_types=['text'])
def send_text(message):
  global mes_sync

  while not mes_sync:
    pass
  
  mes_sync = False

  global ACTIVE_CHARS
  global OPENED_CARDS
  global CLOSED_CARD
  global players_id
  global waiters_id
  global players_names
  global start_voters
  global game_Is_Started
  global draft_index
  global choising
  global rounds_start
  global draft_start
  global keyboard8
  global waiters_names
  global playing
  global games_start
  global moves_start
  global coins_or_cards
  global char_feat
  global cur_player
  global char_index
  global taken_cards
  global taking_cards
  global keyboard10
  global quart_building
  global quart_choising
  global enough_coins
  global keyboard9
  global round_index
  global spec_feat
  global killing
  global stealing
  global robbed_char
  global thief
  global start_sync
  global keyboard12
  global selected_chars
  global swapping 
  global swap_player
  global arch_builds
  global player_destr
  global quart_destr
  global destr_player
  global collect_coins
  global have_type_q 
  global destr_cost
  global lab
  global using_lab
  global smithy
  global grave
  global grave_owner
  global destr_quart
  global first_builder
  global last_round

  if((game_Is_Started and
     (message.chat.id not in players_id+waiters_id)) or
    (not game_Is_Started )):

    if ((message.text.lower() == '–≤—ã—Ö–æ–¥') and 
       (message.chat.id in players_id+waiters_id)):
        bot.send_message(message.chat.id, '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã', reply_markup = key.keyboard1)
        
        for player in Players:
            if player.id == message.chat.id:
                Players.remove(player)
        
        if message.chat.id in players_id:
            players_names.remove(players_names[players_id.index(message.chat.id)])
            players_id.remove(message.chat.id)

        if message.chat.id in waiters_id:
            waiters_names.remove(waiters_names[waiters_id.index(message.chat.id)])

        for player in players_id:
                if(len(players_id) > 1) and (player not in start_voters):
                    bot.send_message(player, message.from_user.first_name + ' –≤—ã—à–µ–ª –∏–∑ –∏–≥—Ä—ã', reply_markup = key.keyboard5)
                if len(players_id) == 1:
                    bot.send_message(player, message.from_user.first_name + ' –≤—ã—à–µ–ª –∏–∑ –∏–≥—Ä—ã', reply_markup = key.keyboard7)
                    start_voters.clear()            
                if (len(players_id) > 1) and (player in start_voters):
                    bot.send_message(player, message.from_user.first_name + ' –≤—ã—à–µ–ª –∏–∑ –∏–≥—Ä—ã', reply_markup = key.keyboard6_1)
        
        if message.chat.id in start_voters:
            start_voters.remove(message.chat.id)
    elif message.text.lower() == '–≤—ã—Ö–æ–¥':
        bot.send_message(message.chat.id, 'Ok', reply_markup = key.keyboard1)

    for i in range(0, len(players_id)):
        if (players_id[i] != message.chat.id and 
           (message.chat.id in players_id) and 
           (message.text.lower() != ('—Å—Ç–∞—Ä—Ç üôã‚Äç‚ôÇÔ∏è')) and
           (message.text.lower() != ('—Å—Ç–∞—Ä—Ç')) and
           (message.text.lower() != ('–ø–µ—Ä—Å–æ–Ω–∞–∂–∏ üé≠')) and
           (message.text.lower() != ('–ø–µ—Ä—Å–æ–Ω–∞–∂–∏')) and 
           (message.text.lower() != ('–∏–≥—Ä–æ–∫–∏ üë•')) and
           (message.text.lower() != ('–æ—Ç–º–µ–Ω–∞ ‚ùå')) and
           (message.text.lower() != ('–æ—Ç–º–µ–Ω–∞')) and
           (message.text.lower() != ('–≤—ã—Ö–æ–¥')) and
           (message.text.lower() != ('–∏–≥—Ä–æ–∫–∏')) and
           ('–∞—Å—Å–∞—Å–∏–Ω' != message.text.lower()) and
           ('–≤–æ—Ä' != message.text.lower()) and
           ('—á–∞—Ä–æ–¥–µ–π' != message.text.lower()) and
           ('–∫–æ—Ä–æ–ª—å' != message.text.lower()) and
           ('–µ–ø–∏—Å–∫–æ–ø' != message.text.lower()) and
           ('–∫—É–ø–µ—Ü' != message.text.lower()) and
           ('–∑–æ–¥—á–∏–π' != message.text.lower()) and
           ('–∫–æ–Ω–¥–æ—Ç—å–µ—Ä' != message.text.lower())):
            bot.send_message(players_id[i], message.from_user.first_name + ': '+ message.text)

    if '–∏–≥—Ä–∞—Ç—å' in message.text.lower() and (message.chat.id not in players_id + waiters_id):
        if len(players_id + waiters_id) == 7:
            bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ: –∫–æ–º–Ω–∞—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞, —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –º–æ–≥—É—Ç –Ω–µ –±–æ–ª–µ–µ 7 —á–µ–ª–æ–≤–µ–∫. –î–æ–∂–¥–∏—Ç–µ—Å—å –≤—ã—Ö–æ–¥–∞ –æ–¥–Ω–æ–≥–æ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤.')
        else:
            if game_Is_Started:
                waiters_id.append(message.chat.id)
                waiters_names.append(message.from_user.first_name)
                for player in players_id + waiters_id:
                    if message.chat.id == player:
                        bot.send_message(message.chat.id,'–ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞—Ç–∞. –í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –ø–æ—Å–ª–µ –µ–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è.')
                    else:
                        bot.send_message(player, message.from_user.first_name + ' –∑–∞—Ö–æ–¥–∏—Ç –≤ –∏–≥—Ä—É, –Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è –∏ —Å–º–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.')
            else:   
                players_id.append(message.chat.id)
                players_names.append(message.from_user.first_name) 
                player = Player()
                player.id = message.chat.id
                player.name = message.from_user.first_name
                player.coins = 2
                Players.append(player)       
            
                if(len(players_id) > 1):
                    bot.send_message(message.chat.id, '–í—ã –≤ –∏–≥—Ä–µ!\n'+
                '–ú–æ–≥—É—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –æ—Ç 2 –¥–æ 7 —á–µ–ª–æ–≤–µ–∫. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤–≤–µ–¥–∏—Ç–µ "—Å—Ç–∞—Ä—Ç".'+
                ' –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≥–æ–ª–æ—Å—É—é—Ç –≤—Å–µ, –∏–≥—Ä–∞ –Ω–∞—á–Ω–µ—Ç—Å—è. \n'+
                '–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤: ' + ', '.join(map(str, players_names)), 
                reply_markup = key.keyboard5)
                else: 
                    bot.send_message(message.chat.id, '–í—ã –≤ –∏–≥—Ä–µ!\n'+
                '–ú–æ–≥—É—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –æ—Ç 2 –¥–æ 7 —á–µ–ª–æ–≤–µ–∫. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤–≤–µ–¥–∏—Ç–µ "—Å—Ç–∞—Ä—Ç".'+
                ' –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≥–æ–ª–æ—Å—É—é—Ç –≤—Å–µ, –∏–≥—Ä–∞ –Ω–∞—á–Ω–µ—Ç—Å—è. \n'+
                '–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤: ' + ', '.join(map(str, players_names)), 
                reply_markup = key.keyboard7)
                
            for player in (players_id + waiters_id):
                if player != message.chat.id:
                    if message.chat.id in waiters_id:
                        bot.send_message(player, message.from_user.first_name + ' –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –∏–≥—Ä–µ')
                    else:
                        if player not in start_voters:
                            bot.send_message(player, message.from_user.first_name + ' –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –∏–≥—Ä–µ', reply_markup = key.keyboard5)
                        else:
                            bot.send_message(player, message.from_user.first_name + ' –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –∏–≥—Ä–µ')
   
    if((message.text.lower() == '—Å—Ç–∞—Ä—Ç' or (message.text.lower() == '—Å—Ç–∞—Ä—Ç üôã‚Äç‚ôÇÔ∏è')) and (message.chat.id in players_id) and
      (message.chat.id not in start_voters)):

        if(len(players_id) == 1):
          bot.send_message(message.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã.')        
        
        else:


                start_voters.append(message.chat.id)    
                
                for player in players_id:
                    if(message.chat.id != player):
                        bot.send_message(player, message.from_user.first_name +
                    ' –≥–æ–ª–æ—Å—É–µ—Ç –∑–∞ –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã.\n\n' +
                    '–í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤: ' +
                    str(len(start_voters))+'/'+str(len(players_id)))
                    else:
                        bot.send_message(player, '–í—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏. –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –≥–æ–ª–æ—Å, –≤–≤–µ–¥–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞".\n\n' +
                    '–í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤: ' +
                    str(len(start_voters))+'/'+str(len(players_id)),
                    reply_markup = key.keyboard6_1)

    elif((message.text.lower() == '—Å—Ç–∞—Ä—Ç' or
         (message.text.lower() == '—Å—Ç–∞—Ä—Ç üôã‚Äç‚ôÇÔ∏è')) and
         (message.chat.id in players_id)):
        bot.send_message(message.chat.id,'–í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏. –î–ª—è –æ—Ç–º–µ–Ω—ã –≥–æ–ª–æ—Å–∞ –≤–≤–µ–¥–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞"')

    if len(start_voters) == len(players_id) and (len(players_id) > 1) and not game_Is_Started:
        game_Is_Started = True
        start_voters.clear()
        send_to_all_membs('–ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –≤—Å–µ!\n–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!',key.keyboard7)

    if(((message.text.lower() == '–æ—Ç–º–µ–Ω–∞') or
       (message.text.lower() == '–æ—Ç–º–µ–Ω–∞ ‚ùå')) and
       (message.chat.id in players_id) and
       (message.chat.id in start_voters) and
       not game_Is_Started):
        start_voters.remove(message.chat.id)

        for i in range(0, len(players_id)):
            if(message.chat.id != players_id[i]):
                bot.send_message(players_id[i], message.from_user.first_name +
                ' –æ—Ç–º–µ–Ω–∏–ª(–∞) —Å–≤–æ–π –≥–æ–ª–æ—Å.\n\n' +
                '–í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤: ' +
            str(len(start_voters))+'/'+str(len(players_id)))
            else:
                bot.send_message(players_id[i], '–í–∞—à –≥–æ–ª–æ—Å –æ—Ç–º–µ–Ω–µ–Ω.\n\n'+
                '–í—Å–µ–≥–æ –ø—Ä–æ–≥–æ—Å–æ–≤–∞–≤—à–∏—Ö: ' +
            str(len(start_voters))+'/'+str(len(players_id)),
             reply_markup = key.keyboard5)

    elif(((message.text.lower() == '–æ—Ç–º–µ–Ω–∞') or
       (message.text.lower() == '–æ—Ç–º–µ–Ω–∞ ‚ùå')) and
       (message.chat.id in players_id) and
       (message.chat.id not in start_voters)):
        bot.send_message(message.chat.id,'–í—ã –Ω–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏. –ù–∞–∂–º–∏—Ç–µ "—Å—Ç–∞—Ä—Ç" —á—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å.')

    if ('–∏–≥—Ä–æ–∫–∏' == message.text.lower() or 
        '–∏–≥—Ä–æ–∫–∏ üë•' == message.text.lower()):
        bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤:\n'+'\n'.join(map(str, players_names)))

    if '–ø—Ä–∞–≤–∏–ª–∞' in message.text.lower() and (message.chat.id not in players_id):
        bot.send_message(message.chat.id, '–í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ pdf, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ, –∞ —Ç–∞–∫–∂–µ –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏–ª–∏ –∫–≤–∞—Ä—Ç–∞–ª–æ–≤.\n–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –æ—Ç–ª–∏—á–∏—è –æ—Ç –Ω–∞—Å—Ç–æ–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏:\n‚Äî –∏–≥—Ä–æ–∫–∏ –≤—ã–±–∏—Ä–∞—é—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ –ø–æ—Ä—è–¥–∫–µ –≤—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É, —Ç. –µ. –ø–µ—Ä–≤—ã–π –≤–æ—à–µ–¥—à–∏–π –ø–æ–ª—É—á–∞–µ—Ç –∫–æ—Ä–æ–Ω—É, –∏ —Ç–¥ –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤ –∏–≥—Ä—É.\n‚Äî –µ—Å–ª–∏ —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç –Ω–∞ –ø–æ—Å—Ç—Ä–æ–π–∫—É –Ω–∏ –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–≤–∞—Ä—Ç–∞–ª–æ–≤ –∏–ª–∏ –∫–∞—Ä—Ç –Ω–∞ —Ä—É–∫–µ –Ω–µ—Ç, —Ç–æ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –∫–≤–∞—Ä—Ç–∞–ª–æ–≤ –Ω–µ –±—É–¥–µ—Ç. –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è —Å–≤–æ–π—Å—Ç–≤ –æ—Å–æ–±—ã—Ö –∫–≤–∞—Ä—Ç–∞–ª–æ–≤, –ø–æ–∑–≤–æ–ª—è—é—â–∏—Ö –æ–±–º–µ–Ω–∏–≤–∞—Ç—å –º–æ–Ω–µ—Ç—ã –Ω–∞ –∫–≤–∞—Ä—Ç–∞–ª—ã –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.\n ‚Äî –∫–≤–∞—Ä—Ç–∞–ª –ø—Ä–∏–∑—Ä–∞–∫–æ–≤(–≤ –∫–æ–Ω—Ü–µ –∏–≥—Ä—ã —Å—á–∏—Ç–∞–µ—Ç—Å—è –∫–≤–∞—Ä—Ç–∞–ª–æ–º –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –Ω–∞ –≤—ã–±–æ—Ä) —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω–∞—á–µ: –µ—Å–ª–∏ –≤ –∫–æ–Ω—Ü–µ –≤–∞–º –Ω–µ –±—É–¥–µ—Ç —Ö–≤–∞—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞ –∫–≤–∞—Ä—Ç–∞–ª–æ–≤, —Ç–æ –∫–≤–∞—Ä—Ç–∞–ª –ø—Ä–∏–∑—Ä–∞–∫–æ–≤ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π —Ç–∏–ø.',
          reply_markup = key.keyboard2)
    
    if ('–º–µ–Ω—é' in message.text.lower()) and message.chat.id not in players_id:
       bot.send_message(message.chat.id, '''–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å –∏–ª–∏ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏.
    ''', reply_markup = key.keyboard1)

    if '—Å–∫–∞—á–∞—Ç—å' in message.text.lower() and message.chat.id not in players_id :
        bot.send_message(message.chat.id, 'https://drive.google.com/file/d/1hX99Yhy1OFS5dEwxlpTBEaq5wRfu56vd/view?usp=sharing')
    
    if '–≤–∏–¥–µ–æ' in message.text.lower() and message.chat.id not in players_id:
         bot.send_message(message.chat.id, 'http://bit.ly/2msLOlA')
    
    if "–ø–µ—Ä—Å–æ–Ω–∞–∂–∏" in message.text.lower() and message.chat.id not in players_id:
        bot.send_message(message.chat.id,'–û—á–µ—Ä–µ–¥—å —Ö–æ–¥–∞ | –ø–µ—Ä—Å–æ–Ω–∞–∂\n\n' +
        '\n'.join(map(str, CHARACTERS)),reply_markup = key.keyboard4)
    elif ("–ø–µ—Ä—Å–æ–Ω–∞–∂–∏" == message.text.lower() or
          "–ø–µ—Ä—Å–æ–Ω–∞–∂–∏ üé≠" == message.text.lower()):
        bot.send_message(message.chat.id,'–û—á–µ—Ä–µ–¥—å —Ö–æ–¥–∞ | –ø–µ—Ä—Å–æ–Ω–∞–∂\n\n'+ 
        '\n'.join(map(str, CHARACTERS)))

    if '–∫–≤–∞—Ä—Ç–∞–ª—ã' in message.text.lower() and message.chat.id not in players_id:
        bot.send_message(message.chat.id, 
                '''–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –ø–æ–ª—É—á–∞—é—Ç –ø–æ –æ–¥–Ω–æ–π –º–æ–Ω–µ—Ç–∫–µ –∑–∞ –∫–∞–∂–¥—ã–π –∫–≤–∞—Ä—Ç–∞–ª —Å–≤–æ–µ–≥–æ —Ç–∏–ø–∞:

–ö–æ—Ä–æ–ª—å ü§¥  ‚Äì –¥–≤–æ—Ä—è–Ω—Å–∫–∏–π üü°

–ï–ø–∏—Å–∫–æ–ø üë≥ ‚Äì —Ü–µ—Ä–∫–æ–≤–Ω—ã–π üîµ

–ö—É–ø–µ—Ü ü§µ ‚Äì —Ç–æ—Ä–≥–æ–≤—ã–π üü¢

–ö–æ–Ω–¥–æ—Ç—å–µ—Ä üíÇ ‚Äì –≤–æ–µ–Ω–Ω—ã–π  üî¥

–û—Å–æ–±—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã üü£ –¥–∞—é—Ç –í–∞–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –±–æ–Ω—É—Å—ã'''
                , reply_markup = key.keyboard3)
   
    if ('–∞—Å—Å–∞—Å–∏–Ω' == message.text.lower()  or
         message.text.lower() == CHARACTERS[0].lower()):
        bot.send_message(message.chat.id, 
        CHARACTERS[0] + '''\n–ú–æ–∂–µ—Ç–µ –Ω–∞–∑–≤–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ
—Ö–æ—Ç–∏—Ç–µ —É–±–∏—Ç—å. –£–±–∏—Ç—ã–π –Ω–∏—á–µ–º –Ω–µ –≤—ã–¥–∞–µ—Ç —Å–µ–±—è –∏ –æ–±—è–∑–∞–Ω –ø—Ä–æ–º–æ–ª—á–∞—Ç—å –∫–æ–≥–¥–∞ –Ω–∞—Å—Ç–∞–Ω–µ—Ç –µ–≥–æ —Ö–æ–¥. –•–æ–¥ —É–±–∏—Ç–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è.''' )

    if ('–≤–æ—Ä' == message.text.lower() or
         message.text.lower() == CHARACTERS[1].lower()):
        bot.send_message(message.chat.id,
        CHARACTERS[1] + '''\n–ú–æ–∂–µ—Ç–µ –Ω–∞–∑–≤–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ
—Ö–æ—Ç–∏—Ç–µ –æ–±–≤–æ—Ä–æ–≤–∞—Ç—å. –ö–æ–≥–¥–∞ –µ–≥–æ –≤—ã–∑—ã–≤–∞—é—Ç, –∑–∞–±–µ—Ä–∏—Ç–µ —É –µ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≤—Å—ë –∑–æ–ª–æ—Ç–æ. –í–æ—Ä–æ–≤–∞—Ç—å
—É –∞—Å—Å–∞—Å–∏–Ω–∞ –∏–ª–∏ —É –∂–µ—Ä—Ç–≤—ã –∞—Å—Å–∞—Å–∏–Ω–∞ –Ω–µ–ª—å–∑—è''')

    if ('—á–∞—Ä–æ–¥–µ–π' == message.text.lower()  or
         message.text.lower() == CHARACTERS[2].lower()):
        bot.send_message(message.chat.id, 
        CHARACTERS[2] + '''\n–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —Ö–æ–¥–∞ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å
–æ–¥–Ω–æ –∏–∑ –¥–≤—É—Ö –¥–µ–π—Å—Ç–≤–∏–π: –æ–±–º–µ–Ω—è—Ç—å –≤—Å–µ —Å–≤–æ–∏ –∫–∞—Ä—Ç—ã —Å —Ä—É–∫–∏ (–Ω–µ –≤ –≥–æ—Ä–æ–¥–µ)
–Ω–∞ –∫–∞—Ä—Ç—ã —Å —Ä—É–∫–∏ –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞; –≤—ã –≤–ø—Ä–∞–≤–µ
–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ç–∞–∫–æ–π –æ–±–º–µ–Ω, –¥–∞–∂–µ –µ—Å–ª–∏ –∫–∞—Ä—Ç
—É –≤–∞—Å –Ω–∞ —Ä—É–∫–µ –Ω–µ—Ç, ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–±–µ—Ä–∏—Ç–µ –∫–∞—Ä—Ç—ã
—É —Å–æ–ø–µ—Ä–Ω–∏–∫–∞;
–≤–µ—Ä–Ω—É—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ –∫–∞—Ä—Ç —Å —Ä—É–∫–∏ –ø–æ–¥
–∫–æ–ª–æ–¥—É –∫–≤–∞—Ä—Ç–∞–ª–æ–≤ –∏ –≤–∑—è—Ç—å –∏–∑ –Ω–µ—ë —Å—Ç–æ–ª—å–∫–æ –∂–µ
–Ω–æ–≤—ã—Ö –∫–∞—Ä—Ç –∫–≤–∞—Ä—Ç–∞–ª–æ–≤.'''
        )

    if ('–∫–æ—Ä–æ–ª—å' == message.text.lower() or
         message.text.lower() == CHARACTERS[3].lower()):
        bot.send_message(message.chat.id, 
        CHARACTERS[3] + '''\n–ü–æ–ª—É—á–∏—Ç–µ –æ–¥–∏–Ω –∑–æ–ª–æ—Ç–æ–π –∑–∞ –∫–∞–∂–¥—ã–π –¥–≤–æ—Ä—è–Ω—Å–∫–∏–π (–∂—ë–ª—Ç—ã–π) –∫–≤–∞—Ä—Ç–∞–ª –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ. –í —Å–≤–æ–π
—Ö–æ–¥ –≤—ã –¥–æ–ª–∂–Ω—ã –≤–∑—è—Ç—å –∫–æ—Ä–æ–Ω—É. –í —Å–ª–µ–¥—É—é—â–µ–º —Ä–∞-
—É–Ω–¥–µ –ø–µ—Ä–≤—ã–º –±—É–¥–µ—Ç–µ –≤—ã–±–∏—Ä–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –ï—Å–ª–∏
–∫–æ—Ä–æ–ª—è –Ω–∏–∫—Ç–æ –Ω–µ –≤—ã–±—Ä–∞–ª, –∫–æ—Ä–æ–Ω–∞ –æ—Å—Ç–∞—ë—Ç—Å—è —É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞. –ï—Å–ª–∏ –∫–æ—Ä–æ–ª—å –≤—ã–±—Ä–∞–Ω, –Ω–æ —É–±–∏—Ç, –µ–≥–æ –≤–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ö–æ–¥, –∫–∞–∫ –∏ –≤—Å—è–∫–∏–π –¥—Ä—É–≥–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂, –Ω–æ –≤ –∫–æ–Ω—Ü–µ —Ä–∞—É–Ω–¥–∞ –ø–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ—Ä–æ–Ω—É –∫–∞–∫ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫ –ø—Ä–µ—Å—Ç–æ–ª–∞.'''
        )

    if ('–µ–ø–∏—Å–∫–æ–ø' == message.text.lower() or
         message.text.lower() == CHARACTERS[4].lower()):
        bot.send_message(message.chat.id, 
        CHARACTERS[4] + '''\n–ü–æ–ª—É—á–∏—Ç–µ –æ–¥–∏–Ω –∑–æ–ª–æ—Ç–æ–π –∑–∞ –∫–∞–∂–¥—ã–π —Ü–µ—Ä–∫–æ–≤–Ω—ã–π (—Å–∏–Ω–∏–π) –∫–≤–∞—Ä—Ç–∞–ª –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ.
–í —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ –∫–æ–Ω–¥–æ—Ç—å–µ—Ä –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–∑—Ä—É—à–∏—Ç—å –≤–∞—à–∏ –∫–≤–∞—Ä—Ç–∞–ª—ã. –ù–æ –µ—Å–ª–∏ –≤—ã —É–±–∏—Ç—ã, —Ç–æ –º–æ–∂–µ—Ç.''')

    if ('–∫—É–ø–µ—Ü' == message.text.lower() or
         message.text.lower() == CHARACTERS[5].lower()):
        bot.send_message(message.chat.id, 
        CHARACTERS[5] + '''\n–ü–æ–ª—É—á–∏—Ç–µ –æ–¥–∏–Ω –∑–æ–ª–æ—Ç–æ–π –∑–∞ –∫–∞–∂–¥—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π (–∑–µ–ª—ë–Ω—ã–π) –∫–≤–∞—Ä—Ç–∞–ª –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ–¥–∏–Ω –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–æ–ª–æ—Ç–æ–π. –≠—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã –≤—ã —Å–æ–±—Ä–∞–ª–∏ –≤ —ç—Ç–æ–º —Ö–æ–¥—É.'''
        )

    if ('–∑–æ–¥—á–∏–π' == message.text.lower() or
         message.text.lower() == CHARACTERS[6].lower()):
        bot.send_message(message.chat.id, 
        CHARACTERS[6] + '''\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–≤–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã.
–≠—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ,
–∫–∞–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã –≤—ã —Å–æ–±—Ä–∞–ª–∏ –≤ —ç—Ç–æ–º —Ö–æ–¥—É. –í —Å–≤–æ–π
—Ö–æ–¥ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Ç—Ä–∏ –∫–≤–∞—Ä—Ç–∞–ª–∞ –∏–ª–∏
–º–µ–Ω—å—à–µ.''')

    if  (message.text.lower() == ('–∫–æ–Ω–¥–æ—Ç—å–µ—Ä') or
         message.text.lower() == CHARACTERS[7].lower()):
        bot.send_message(message.chat.id, 
        CHARACTERS[7] + '''\n–ü–æ–ª—É—á–∏—Ç–µ –æ–¥–∏–Ω –∑–æ–ª–æ—Ç–æ–π –∑–∞ –∫–∞–∂–¥—ã–π –≤–æ–∏–Ω—Å–∫–∏–π
(–∫—Ä–∞—Å–Ω—ã–π) –∫–≤–∞—Ä—Ç–∞–ª –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ. –í—ã –º–æ–∂–µ—Ç–µ
—Ä–∞–∑—Ä—É—à–∏—Ç—å –æ–¥–∏–Ω –∫–≤–∞—Ä—Ç–∞–ª –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ
(–≤ —Ç–æ–º —á–∏—Å–ª–µ –≤ —Å–≤–æ—ë–º) –ø–æ –≤–∞—à–µ–º—É –≤—ã–±–æ—Ä—É, –∑–∞–ø–ª–∞—Ç–∏–≤ –Ω–∞ –æ–¥–∏–Ω –∑–æ–ª–æ—Ç–æ–π –º–µ–Ω—å—à–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
–∫–≤–∞—Ä—Ç–∞–ª–∞. –ö–≤–∞—Ä—Ç–∞–ª —Ü–µ–Ω–æ–π –≤ 1 –∑–æ–ª–æ—Ç–æ–π –≤—ã —Å–Ω–æ—Å–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–∞ —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ –∫–≤–∞—Ä—Ç–∞–ª–∞ —Ü–µ–Ω–æ–π –≤ 2 –∑–æ–ª–æ—Ç—ã—Ö —É–π–¥—ë—Ç 1 –º–æ–Ω–µ—Ç–∞, –∫–≤–∞—Ä—Ç–∞–ª —Ü–µ–Ω–æ–π
–≤ 5 –∑–æ–ª–æ—Ç—ã—Ö –ø–æ—Ç—Ä–µ–±—É–µ—Ç 4 –º–æ–Ω–µ—Ç—ã –∏ —Ç. –ø. –í—ã –Ω–µ
–º–æ–∂–µ—Ç–µ —Å–Ω–æ—Å–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª—ã –≤ –¥–æ—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ. –£–Ω–∏—á—Ç–æ–∂–µ–Ω–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã —Å–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è
–≤ –∑–∞–∫—Ä—ã—Ç—É—é –ø–æ–¥ –Ω–∏–∑ –∫–æ–ª–æ–¥—ã –∫–≤–∞—Ä—Ç–∞–ª–æ–≤.''')
    
    if (message.chat.id in players_id):
        try:
            if(players_names[players_id.index(message.chat.id)] != message.from_user.first_name):
                players_names[players_id.index(message.chat.id)] = message.from_user.first_name
        except IndexError:
            pass

  if game_Is_Started and (message.chat.id in players_id+waiters_id):

        if ((message.text.lower() == '–≤—ã—Ö–æ–¥') and 
            (message.chat.id in players_id+waiters_id)):
            
            bot.send_message(message.chat.id, '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã', reply_markup = key.keyboard1)

            for player in Players:
                if player.id == message.chat.id:
                    Players.remove(player)
                    q.quarts += player.quarts + player.b_quarts 
                    
            if message.chat.id == cur_player.id and not grave:
                char_feat = False

            if message.chat.id == grave_owner.id and grave:
                    char_feat = False
            if len(selected_chars):
                if selected_chars[char_index] == CHARACTERS[7] and grave:
                    coins_or_cards = False
                    quart_building = False
                    spec_feat =  False 
                    collect_coins = False 
                    lab = False 
                    smithy = False
            
            if (message.chat.id == players_id[draft_index]) and not playing:
                draft_start = True

            reload_keyboard()

            if message.chat.id in players_id:        
                players_names.remove(players_names[players_id.index(message.chat.id)])
                players_id.remove(message.chat.id)              
            else:
                waiters_id.remove(message.chat.id)

            for player in players_id+waiters_id:
                bot.send_message(player, message.from_user.first_name + ' –≤—ã—à–µ–ª –∏–∑ –∏–≥—Ä—ã')             
                                
            if(len(players_id) == 1):
                send_to_all_membs ('–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–∑-–∑–∞ –Ω–µ—Ö–≤–∞—Ç–∫–∏ –∏–≥—Ä–æ–∫–æ–≤', key.keyboard7)
                game_Is_Started = False
                choising = True
                ACTIVE_CHARS = [
                    '1Ô∏è‚É£ '+'–ê—Å—Å–∞—Å–∏–Ω ' + chr(0x1F977),
                    '2Ô∏è‚É£ '+'–í–æ—Ä ' + chr(0x1F9B9),
                    '3Ô∏è‚É£ '+'–ß–∞—Ä–æ–¥–µ–π ' + chr(0x1F9D9),
                    '4Ô∏è‚É£ '+'–ö–æ—Ä–æ–ª—å ' +  chr(0x1F934) ,
                    '5Ô∏è‚É£ '+'–ï–ø–∏—Å–∫–æ–ø '  + chr(0x1F473),
                    '6Ô∏è‚É£ '+'–ö—É–ø–µ—Ü '  + chr(0x1F935),
                    '7Ô∏è‚É£ '+'–ó–æ–¥—á–∏–π '  + chr(0x1F477),
                    '8Ô∏è‚É£ '+'–ö–æ–Ω–¥–æ—Ç—å–µ—Ä '  +  chr(0x1F482),
                    ]
                CLOSED_CARD = []
                OPENED_CARDS.clear()
                draft_index = 0
                rounds_start = True 
                draft_start = True
                playing = False
                games_start = True
                selected_chars = []
                moves_start = True
                char_feat = False
                taken_cards.clear()
                taking_cards = False
                cur_player = Player()
                char_index = 0
                coins_or_cards = True
                taken_cards = []
                games_start = True
                quart_building = True
                round_index = 1
                quart_choising = False
                enough_coins = False 
                start_voters.clear()
                arch_builds = 3
                last_round = False

                Players[0].coins = 2
                Players[0].chars = []
                Players[0].quarts = []
                Players[0].b_quarts = []

                q.quarts = []
                for quart in q.QUARTS:
                    q.quarts.append(quart)

                players_id += waiters_id
                players_names = players_names + waiters_names
                waiters_id.clear()
                waiters_names.clear()
               
        for player in players_id+waiters_id:
            if (player != message.chat.id and  
                (message.text.lower() != ('—Å—Ç–∞—Ä—Ç üôã‚Äç‚ôÇÔ∏è')) and
                (message.text.lower() != ('—Å—Ç–∞—Ä—Ç')) and
                (message.text.lower() != ('–ø–µ—Ä—Å–æ–Ω–∞–∂–∏ üé≠')) and
                (message.text.lower() != ('–ø–µ—Ä—Å–æ–Ω–∞–∂–∏')) and 
                (message.text.lower() != ('–∏–≥—Ä–æ–∫–∏ üë•')) and
                (message.text.lower() != ('–≤—ã—Ö–æ–¥')) and
                (message.text.lower() != ('–∏–≥—Ä–æ–∫–∏')) and
                (message.text.lower() != ('–∏–≥—Ä–∞—Ç—å')) and
                ('–∞—Å—Å–∞—Å–∏–Ω' != message.text.lower()) and
                ('–≤–æ—Ä' != message.text.lower()) and
                ('—á–∞—Ä–æ–¥–µ–π' != message.text.lower()) and
                ('–∫–æ—Ä–æ–ª—å' != message.text.lower()) and
                ('–µ–ø–∏—Å–∫–æ–ø' != message.text.lower()) and
                ('–∫—É–ø–µ—Ü' != message.text.lower()) and
                ('–∑–æ–¥—á–∏–π' != message.text.lower()) and
                ('–∫–æ–Ω–¥–æ—Ç—å–µ—Ä' != message.text.lower()) and
                (message.text not in CHARACTERS) and
                (message.text not in q.quarts_names) and
                (message.text != '–ö–∞—Ä—Ç—ã üÉèüÉè') and
                (message.text != '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ö–æ–¥ ‚ùå') and
                (message.text != '–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª üî®') and
                (message.text != '–ú–æ–Ω–µ—Ç—ã üèÖüèÖ' ) and
                (message.text != '–û—Ç–º–µ–Ω–∞') and
                (message.text != '–ú–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ üë§') and 
                (message.text != '–£–±–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üó°') and
                (message.text != '–û–±–≤–æ—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üí∞') and
                (message.text != '–†–∞–∑—Ä—É—à–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª ü™ì') and
                (message.text != '–°–æ–±—Ä–∞—Ç—å –º–æ–Ω–µ—Ç—ã —Å –∫–≤–∞—Ä—Ç–æ–ª–æ–≤ üèÖ') and
                (message.text != '–£ –∏–≥—Ä–æ–∫–∞ üë§') and 
                (message.text != '–ò–∑ –∫–æ–ª–æ–¥—ã üì§') and
                (message.text != '–°–±—Ä–æ—Å–∏—Ç—å –∫–∞—Ä—Ç—É üÉè') and
                (message.text != '–í–∑—è—Ç—å üÉè') and
                (message.text != '–û–±–º–µ–Ω—è—Ç—å –∫–∞—Ä—Ç—ã üîÉüÉè') and
                (message.text != '–ò–≥—Ä–∞—Ç—å üéÆ') and
                (message.text not in players_names)):
                bot.send_message(player, message.from_user.first_name + ': ' + message.text)

        if message.text == '–ú–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ üë§':
            for player in Players:
                if player.id == message.chat.id:
                    bot.send_message(player.id, '–ö–≤–∞—Ä—Ç–∞–ª—ã –≤ —Ä—É–∫–µ:\n\n'+'\n'.join(map(str, player.quarts)) + '\n\n–ü–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã:\n\n' + '\n'.join(map(str, player.b_quarts)) + '\n\n–ú–æ–Ω–µ—Ç—ã: ' + player.coins*'üèÖ')
                    break
       
        if ('–∏–≥—Ä–æ–∫–∏' == message.text.lower() or 
            '–∏–≥—Ä–æ–∫–∏ üë•' == message.text.lower()):
            if len(waiters_id):
                bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π:\n' '–∏–º—è | –º–æ–Ω–µ—Ç—ã | –∫–≤–∞—Ä—Ç–∞–ª—ã –≤ —Ä—É–∫–µ\n–ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã\n\n'+'\n'.join(map(str, Players)) + '\n–û–∂–∏–¥–∞—é—â–∏–µ –∏–≥—Ä–æ–∫–∏:\n'+'\n'.join(map(str, waiters_names)))
            else:
                bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π:\n' '–∏–º—è | –º–æ–Ω–µ—Ç—ã | –∫–≤–∞—Ä—Ç–∞–ª—ã –≤ —Ä—É–∫–µ\n–ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã\n\n'+'\n'.join(map(str, Players)))

        if ("–ø–µ—Ä—Å–æ–Ω–∞–∂–∏ üé≠" == message.text.lower()):
            bot.send_message(message.chat.id,'–û—á–µ—Ä–µ–¥—å —Ö–æ–¥–∞ | –ø–µ—Ä—Å–æ–Ω–∞–∂\n\n'+ 
            '\n'.join(map(str, CHARACTERS)))
        
        if (message.chat.id in players_id):
            if(players_names[players_id.index(message.chat.id)] != message.from_user.first_name):
                players_names[players_id.index(message.chat.id)] = message.from_user.first_name
                for player in Players:
                    if message.chat.id == player.id:
                        player.name = message.from_user.first_name

        if (message.chat.id in waiters_id):
            if(waiters_names[waiters_id.index(message.chat.id)] != message.from_user.first_name):
                waiters_names[waiters_id.index(message.chat.id)] = message.from_user.first_name
        
        if game_Is_Started:
          
            if (len(players_id) >= 3 and (len(players_id) <= 7)):
                
                if rounds_start:
                    if games_start:
                        draft_quarts()
                        games_start = False

                    draft3_7()

                    time.sleep(1)
                    
                    if len(players_id) != 7 and (len(players_id) != 3):
                        send_to_all_membs('–†–∞—É–Ω–¥ 1 \n\n–û—Ç–∫—Ä—ã—Ç—ã–µ –∫–∞—Ä—Ç—ã: \n' + '\n'.join(map(str, OPENED_CARDS)) + '\n\n' + '–ó–∞–∫—Ä—ã—Ç–∞—è –∫–∞—Ä—Ç–∞: üÉè', key.keyboard7)

                    time.sleep(1)

                    send_to_all_membs('–í–ª–∞–¥–µ–ª–µ—Ü –∫–æ—Ä–æ–Ω—ã: ' + players_names[0] + ' üëë\n\n' + '–û—á–µ—Ä–µ–¥—å –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π:\n' + '\n'.join(map(str, players_names)), key.keyboard7)
                    
                    rounds_start = False

                reload_keyboard()

                char_chosen(message.text, message.chat.id)
                
                your_turn()

            elif len(players_id) == 2:
                
                if rounds_start:
                    
                    if games_start:
                        draft_quarts()
                        games_start = False

                    time.sleep(1)

                    draft2()

                    time.sleep(1)

                    send_to_all_membs('–†–∞—É–Ω–¥ 1 \n' + '–í–ª–∞–¥–µ–ª–µ—Ü –∫–æ—Ä–æ–Ω—ã: ' + players_names[0] + ' üëë\n\n', key.keyboard7)

                    rounds_start = False

                if ((message.text in ACTIVE_CHARS) and
                    (message.chat.id == players_id[draft_index]) and choising):
                         
                    ACTIVE_CHARS.remove(message.text)
                    ACTIVE_CHARS.sort()

                    for player in Players:
                        if player.id == message.chat.id:
                            player.chars.append(message.text)

                    selected_chars.append(message.text)
                    selected_chars.sort()

                    bot.send_message(players_id[draft_index], '–û—Ç–ª–∏—á–Ω–æ!\n–û–¥–∏–Ω –∏–∑ –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π ' + message.text, reply_markup = keyboard8)
                                        
                    reload_keyboard()

                    if len(ACTIVE_CHARS) < 6 and (len(ACTIVE_CHARS) > 1):
                        bot.send_message(players_id[draft_index], '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å', reply_markup = keyboard8)
                        choising = False
                    elif (len(ACTIVE_CHARS) == 1):
                        send_to_all_membs('–í—ã–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∑–∞–∫–æ–Ω—á–µ–Ω!', key.keyboard7)
                        playing = True
                        moves_start = True
                        ACTIVE_CHARS.clear()
                    else:
                        draft_start = True
                        draft_index = (draft_index + 1)%2
                            
                if ((message.chat.id == players_id[draft_index]) and
                    (message.text in ACTIVE_CHARS)):

                    bot.send_message(players_id[draft_index], message.text + ' –Ω–µ –∏–≥—Ä–∞–µ—Ç –≤ —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ', reply_markup = key.keyboard7)
                            
                    ACTIVE_CHARS.remove(message.text)
                    ACTIVE_CHARS.sort()

                    draft_index = (draft_index+1)%2

                    reload_keyboard()

                    draft_start = True

                    choising = True
                
                reload_keyboard()

                your_turn()
            
            if playing:
                    if char_feat:
                        if message.chat.id == cur_player.id: 

                            if coins_or_cards:

                                if message.text == '–ú–æ–Ω–µ—Ç—ã üèÖüèÖ':                           
                                    cur_player.coins = cur_player.coins + 2
                                    coins_or_cards = False
                                    
                                    enough_coins = False
                                    for quart in cur_player.quarts:
                                        if cur_player.coins >= quart.cost and (quart not in cur_player.b_quarts):
                                            enough_coins = True
                                            break
                                    
                                    if q.smithy in cur_player.b_quarts:
                                        smithy = True
                                        
                                    char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (collect_coins and have_type_q) or lab or smithy
                                    
                                    reload_play_keyboard()
                                    
                                    for player in players_id+waiters_id:
                                        if message.chat.id == player:
                                            bot.send_message(player, '–í—ã –≤–∑—è–ª–∏ –¥–≤–µ –º–æ–Ω–µ—Ç—ã', reply_markup = keyboard9)
                                        else:
                                            bot.send_message(player, message.from_user.first_name + ' —Ä–µ—à–∞–µ—Ç –≤–∑—è—Ç—å –º–æ–Ω–µ—Ç—ã.')                                    

                                if message.text == '–ö–∞—Ä—Ç—ã üÉèüÉè':
                                    
                                    keyboard10 = telebot.types.ReplyKeyboardMarkup(True)

                                    taken_cards = []

                                    if q.observ in cur_player.b_quarts:
                                        cards_quant = 3
                                    else:
                                        cards_quant = 2
                                                                            
                                    for i in range(0,cards_quant):             

                                        rand_quart = ran.choice(q.quarts)

                                        error = True
                                        
                                        while error:
                                            try:
                                                quart_name = rand_quart.name                    
                                            except AttributeError:
                                                rand_quart = ran.choice(q.quarts)
                                            else:
                                                error = False

                                        coins_or_cards = False
                                    
                                        reload_play_keyboard()

                                        taken_cards.append(rand_quart)

                                        q.quarts.remove(rand_quart)

                                        keyboard10.row(quart_name)

                                    if q.lib in cur_player.b_quarts:
                                        cur_player.quarts += taken_cards
                                        
                                        char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (have_type_q and collect_coins) or lab or smithy

                                        reload_play_keyboard()

                                        for player in players_id+waiters_id:
                                            if message.chat.id == player:
                                                bot.send_message(cur_player.id, '–í—ã –±–µ—Ä–µ—Ç–µ –Ω–∞ —Ä—É–∫—É:\n\n'+
                                    '\n'.join(map(str, taken_cards)), reply_markup = keyboard9)
                                            else:
                                                bot.send_message(player, message.from_user.first_name+' —Ä–µ—à–∞–µ—Ç –≤–∑—è—Ç—å –∫–∞—Ä—Ç—ã')
                                    else:
                                        taking_cards = True
                                        for player in players_id+waiters_id:
                                            if message.chat.id == player:
                                                bot.send_message(cur_player.id, '–í–∑—è—Ç—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã:\n'+
                                        '\n'.join(map(str, taken_cards))+ '\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö', reply_markup = keyboard10)
                                            else:
                                                reload_play_keyboard()
                                                bot.send_message(player, message.from_user.first_name+' —Ä–µ—à–∞–µ—Ç –≤–∑—è—Ç—å –∫–∞—Ä—Ç—ã')
 
                            if taking_cards:
                                for card in taken_cards:                                   
                                    if message.text == card.name:
                                        
                                        cur_player.quarts.append(card)

                                        for quart in cur_player.quarts:
                                            if cur_player.coins >= quart.cost:
                                                enough_coins = True
                                                break
                                                
                                        char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (have_type_q and collect_coins) or lab or smithy
                                        
                                        reload_play_keyboard()
                                        
                                        taken_cards.remove(card)
                                                                               
                                        q.quarts.append(taken_cards)
                                        
                                        taking_cards = False
 
                                        bot.send_message(cur_player.id, card.name + ' —Ç–µ–ø–µ—Ä—å —É –í–∞—Å –Ω–∞ —Ä—É–∫–∞—Ö.', reply_markup = keyboard9)
                                        
                            if quart_building:
                                    if message.text == '–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª üî®':
                                        keyboard11 = telebot.types.ReplyKeyboardMarkup(True)
                                        
                                        for quart in cur_player.quarts:
                                            while True:
                                                try:
                                                    if cur_player.coins >= quart.cost and (quart not in cur_player.b_quarts):
                                                        keyboard11.row(quart.name)
                                                    break
                                                except AttributeError:
                                                    pass

                                        keyboard11.row('–û—Ç–º–µ–Ω–∞')

                                        bot.send_message(cur_player.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–≤–∞—Ä—Ç–∞–ª, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å\n'+'\n–í–∞—à–∏ –∫–≤–∞—Ä—Ç–∞–ª—ã:\n'+'\n'.join(map(str, cur_player.quarts)) + '\n\n–ú–æ–Ω–µ—Ç—ã:' +cur_player.coins*'üèÖ', reply_markup = keyboard11)
                                    
                                        quart_choising = True
                            
                            if quart_choising:
                                for quart in cur_player.quarts:
                                    if message.text == quart.name:
                                            if quart not in cur_player.b_quarts:
                                                if(cur_player.coins >= quart.cost):


                                                    cur_player.b_quarts.append(quart)
                                                    cur_player.quarts.remove(quart)
                                                    cur_player.coins -= quart.cost

                                                    enough_coins = False
                                                    for _quart in cur_player.quarts:
                                                        if cur_player.coins >= _quart.cost and (_quart not in cur_player.b_quarts):
                                                            enough_coins = True
                                                            break
                                                  
                                                    if q.lab in cur_player.b_quarts:
                                                        lab = True

                                                    smithy = False
                                                    if q.smithy in cur_player.b_quarts and (cur_player.coins >= 2):
                                                        smithy = True

                                                    if q.grave in cur_player.b_quarts:
                                                        grave_owner = cur_player

                                                    quart_choising = False

                                                    if selected_chars[char_index] == CHARACTERS[6]:
                                                        arch_builds -= 1
                                                    
                                                    if selected_chars[char_index] != CHARACTERS[6] or not arch_builds:

                                                        quart_building = False

                                                        if selected_chars[char_index] == CHARACTERS[3]:
                                                            if quart.type == 'üü°':
                                                                have_type_q = True
        
                                                        if selected_chars[char_index] == CHARACTERS[4]:
                                                            if quart.type == 'üîµ':
                                                                have_type_q = True
                                                        if selected_chars[char_index] == CHARACTERS[5]:
                                                            if quart.type == 'üü¢':
                                                                have_type_q = True
                                                        if selected_chars[char_index] == CHARACTERS[7]:
                                                            if quart.type == 'üî¥':
                                                                have_type_q = True
                                                            
                                                        if quart == q.hogwarts:
                                                            have_type_q = True                                            
                                                    
                                                    char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (collect_coins and have_type_q) or lab or smithy

                                                    reload_play_keyboard()

                                                    for player in players_id+waiters_id:
                                                        if player == message.chat.id:
                                                            bot.send_message(player, '–û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–æ—Å—Ç—Ä–æ–∏–ª–∏:\n' + str(quart), reply_markup = keyboard9)
                                                        else:
                                                            bot.send_message(player, message.from_user.first_name + ' —Å—Ç—Ä–æ–∏—Ç —Å–µ–±–µ:\n' + str(quart))

                                                    if len(cur_player.b_quarts) == 7 and (first_builder.name == ''):
                                                        last_round = True
                                                        first_builder = cur_player
                                                        send_to_all_membs(cur_player.name + ' —Å—Ç—Ä–æ–∏—Ç —Å–µ–¥—å–º–æ–π –∫–≤–∞—Ä—Ç–∞–ª –∏ –¥–æ—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≥–æ—Ä–æ–¥, –ø–æ—ç—Ç–æ–º—É —ç—Ç–æ—Ç —Ä–∞—É–Ω–¥ –±—É–¥–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–º –≤ –∏–≥—Ä–µ. –ö–æ–Ω–¥–æ—Ç—å–µ—Ä –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–∑—Ä—É—à–∞—Ç—å –∑–¥–∞–Ω–∏—è –≤ –¥–æ—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ')

                                                else:
                                                    bot.send_message(cur_player.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫–≤–∞—Ä—Ç–∞–ª –∏–ª–∏ –Ω–∞–∫–æ–ø–∏—Ç–µ –±–æ–ª—å—à–µ –º–æ–Ω–µ—Ç.')

                                if message.text == '–û—Ç–º–µ–Ω–∞':
                                    quart_choising = False
                                    bot.send_message(cur_player.id, '–í–∞—à —Ö–æ–¥. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup = keyboard9)

                            if spec_feat:
                                if selected_chars[char_index] == CHARACTERS[0]:
                                    if message.text == '–£–±–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üó°':
                                        
                                        kill_steal_keyboard()
                                        
                                        bot.send_message(cur_player.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–±–∏—Ç—å', reply_markup = keyboard12)

                                        killing = True
                                        spec_feat = False
                                
                                if selected_chars[char_index] == CHARACTERS[1]:
                                    if message.text == '–û–±–≤–æ—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üí∞':

                                        kill_steal_keyboard()

                                        bot.send_message(cur_player.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ–±–≤–æ—Ä–æ–≤–∞—Ç—å', reply_markup = keyboard12)

                                        stealing = True
                                        spec_feat = False

                                if selected_chars[char_index] == CHARACTERS[2]:
                                    if message.text == '–û–±–º–µ–Ω—è—Ç—å –∫–∞—Ä—Ç—ã üîÉüÉè':
                                        swapping = True

                                        swap_keyboard()

                                        bot.send_message(cur_player.id, '–í—ã–±–µ—Ä–∏—Ç–µ, –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ –∫—Ä–∞—Ç—ã –∏–∑ –∫–æ–ª–æ–¥—ã –∏–ª–∏ —Å —Ä—É–∫–∏ –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞', reply_markup = keyboard12)
                                        
                                        spec_feat = False
                                
                                if selected_chars[char_index] == CHARACTERS[7]:
                                    if message.text == '–†–∞–∑—Ä—É—à–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª ü™ì':
                                        
                                        dest_player_key()
                                        
                                        bot.send_message(cur_player.id, '–í—ã–±–µ—Ä–∏–µ –∏–≥—Ä–æ–∫–∞, —É –∫–æ–≥–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑—Ä—É—à–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑—Ä—É—à–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª—ã –µ–ø–∏—Å–∫–æ–ø–∞.',reply_markup = keyboard12)

                                        player_destr = True

                                        spec_feat = False

                            if killing:
                                if message.text in CHARACTERS and (message.text not in OPENED_CARDS):
                                    
                                    if message.text in selected_chars:
                                        selected_chars.remove(message.text)
                                        CLOSED_CARD.append(message.text)    

                                    char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (collect_coins and have_type_q) or lab or smithy

                                    reload_play_keyboard()

                                    for player in players_id+waiters_id:
                                        if player == message.chat.id:
                                            bot.send_message(player, message.text + ' —É–±–∏—Ç –∞—Å—Å–∞—Å–∏–Ω–æ–º –∏ –Ω–µ –∏–≥—Ä–∞–µ—Ç –≤ —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ', reply_markup = keyboard9)
                                        else:
                                            bot.send_message(player, message.text + ' —É–±–∏—Ç –∞—Å—Å–∞—Å–∏–Ω–æ–º –∏ –Ω–µ –∏–≥—Ä–∞–µ—Ç –≤ —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ')

                                    killing = False
                                  
                            if stealing:
                                if message.text in CHARACTERS and (message.text not in OPENED_CARDS) and (message.text not in CLOSED_CARD):

                                    char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (collect_coins and have_type_q) or lab or smithy

                                    reload_play_keyboard()

                                    for player in players_id+waiters_id:
                                        if player == message.chat.id:
                                            bot.send_message(player, message.text + ' –æ–±–≤–æ—Ä–æ–≤–∞–Ω –∏ –≤ —Å–≤–æ–π —Ö–æ–¥ –æ–Ω –ø–µ—Ä–µ–¥–∞—Å—Ç –≤–æ—Ä—É –≤—Å–µ —Å–≤–æ–∏ –º–æ–Ω–µ—Ç—ã', reply_markup = keyboard9)
                                        else:
                                            bot.send_message(player, message.text + ' –æ–±–≤–æ—Ä–æ–≤–∞–Ω –∏ –≤ —Å–≤–æ–π —Ö–æ–¥ –æ–Ω –ø–µ—Ä–µ–¥–∞—Å—Ç –≤–æ—Ä—É –≤—Å–µ —Å–≤–æ–∏ –º–æ–Ω–µ—Ç—ã')

                                    robbed_char = message.text

                                    thief = cur_player
                                    
                                    stealing = False

                            if swapping:
                                if message.text == '–£ –∏–≥—Ä–æ–∫–∞ üë§':
                                    swap_player = True
                                    swapping = False
                                    
                                    
                                    swap_keyboard()

                                    bot.send_message(cur_player.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —Å —Ä—É–∫–∏ –∫–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —Ö–æ—Ç–∏—Ç–µ –æ–±–º–µ–Ω—è—Ç—å –∫–∞—Ä—Ç—ã', reply_markup = keyboard12)

                                if message.text == '–ò–∑ –∫–æ–ª–æ–¥—ã üì§':
                                    taken_cards = []
                                    
                                    for i in range(0,len(cur_player.quarts)):
                                        rand__quart = ran.choice(q.quarts)
                                        taken_cards.append(rand__quart)
                                        q.quarts.remove(rand__quart)
                                    
                                    q.quarts += cur_player.quarts
                                    cur_player.quarts = taken_cards
                                    
                                    enough_coins = False

                                    spec_feat = False

                                    for quart in cur_player.quarts:
                                        if cur_player.coins >= quart.cost:
                                            enough_coins = True
                                            break

                                    char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (collect_coins and have_type_q) or lab or smithy

                                    reload_play_keyboard() 

                                    for player in players_id+waiters_id:
                                        if player != cur_player.id:
                                            bot.send_message(player, cur_player.name + ' –º–µ–Ω—è–µ—Ç —Å–≤–æ–∏ –∫–≤–∞—Ä—Ç–∞–ª—ã –Ω–∞ –∫–∞—Ä—Ç—ã –∏–∑ –∫–æ–ª–æ–¥—ã')
                                        else:
                                            bot.send_message(cur_player.id, '–í—ã –≤–∑—è–ª–∏ –∏–∑ –∫–æ–ª–æ–¥—ã:\n' + '\n'.join(map(str, taken_cards)), reply_markup = keyboard9)
                                
                                if message.text == '–û—Ç–º–µ–Ω–∞':
                                    swapping = False
                                    spec_feat = True
                                    reload_play_keyboard()

                                    bot.send_message(cur_player.id, '–í–∞—à —Ö–æ–¥. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup = keyboard9)

                            if swap_player:
                                for player in Players:
                                    if player.id != message.chat.id:
                                        if player.name == message.text:                                                                           
                                            reload_play_keyboard()

                                            player.quarts, cur_player.quarts = cur_player.quarts, player.quarts
                                            
                                            bot.send_message(cur_player.id, '–í—ã –æ–±–º–µ–Ω–∏–≤–∞–µ—Ç–µ—Å—å –∫–∞—Ä—Ç–∞–º–∏ —Å –∏–≥—Ä–æ–∫–æ–º ' + player.name + ' –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ:\n\n'+'\n'.join(map(str, cur_player.quarts)), reply_markup = keyboard9)

                                            bot.send_message(player.id, cur_player.name + ' –æ–±–º–µ–Ω–∏–≤–∞–µ—Ç—Å—è —Å –í–∞–º–∏ –∫–∞—Ä—Ç–∞–º–∏, –∏ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:\n\n'+'\n'.join(map(str, player.quarts)))
                                            
                                            for player_Id in players_id+waiters_id:
                                                if player_Id != message.chat.id and (player_Id != player.id):
                                                    bot.send_message(player_Id, cur_player.name + ' –æ–±–º–µ–Ω–∏–≤–∞–µ—Ç—Å—è –∫–∞—Ä—Ç–∞–º–∏ —Å ' + player.name)
                                            
                                            swap_player = False

                                            spec_feat = False

                                            enough_coins = False

                                            for quart in cur_player.quarts:
                                                if cur_player.coins >= quart.cost:
                                                    enough_coins = True
                                                    break
                                        
                                            break
                                
                                if message.text == '–û—Ç–º–µ–Ω–∞':
                                    swapping = True

                                    swap_player = False

                                    swap_keyboard()

                                    bot.send_message(cur_player.id, '–í—ã–±–µ—Ä–∏—Ç–µ, –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ –∫—Ä–∞—Ç—ã –∏–∑ –∫–æ–ª–æ–¥—ã –∏–ª–∏ —Å —Ä—É–∫–∏ –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞', reply_markup = keyboard12)

                            if player_destr:
                                for player in Players:
                                    if CHARACTERS[4] not in player.chars:
                                        if message.text == player.name and len(player.b_quarts) and (len(player.b_quarts) < 7):
                                            
                                            quart_destr = True

                                            player_destr = False

                                            destr_player = player

                                            if q.great_wall in player.b_quarts:
                                                destr_cost = 0
                                            else:
                                                destr_cost = 1

                                            dest_quart_key()

                                            bot.send_message(cur_player.id, '–ü–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã –∏–≥—Ä–æ–∫–∞:\n\n' + '\n'.join(map(str, player.b_quarts)) + '\n\n–í–∞—à–∏ –º–æ–Ω–µ—Ç—ã: ' + cur_player.coins*'üèÖ'+'\n\n –í—ã–±–µ—Ä–∏—Ç–µ –∫–≤–∞—Ä—Ç–∞–ª –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑—Ä—É—à–∏—Ç—å. –°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑—É—à–µ–Ω–∏—è –Ω–∞ –æ–¥–Ω—É –º–æ–Ω–µ—Ç—É –º–µ–Ω—å—à–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫–≤–∞—Ä—Ç–∞–ª–∞.', reply_markup = keyboard12)

                                if message.text =='–û—Ç–º–µ–Ω–∞':
                                    player_destr = False
                                    spec_feat = True
                                    quart_destr = False

                                    reload_play_keyboard()

                                    bot.send_message(message.chat.id,'–í–∞—à —Ö–æ–¥. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup = keyboard9)

                            if quart_destr:
                                for quart in destr_player.b_quarts:
                                    if quart.name == message.text and (quart != q.fort):
                                       
                                        if cur_player.coins >= quart.cost - destr_cost:
                                            
                                            cur_player.coins -= quart.cost - destr_cost
                                            
                                            destr_player.b_quarts.remove(quart)

                                            enough_coins = False
                                            for _quart in cur_player.quarts:
                                                if cur_player.coins >= _quart.cost:
                                                    enough_coins = True
                                                    break

                                            reload_play_keyboard()
                                            
                                            for player in players_id+waiters_id:
                                                if message.chat.id != player:
                                                    bot.send_message(player, '–ö–æ–Ω–¥–æ—Ç—å–µ—Ä —Ä–∞–∑—Ä—É—à–∞–µ—Ç:\n' + str(quart) + '\n—É –∏–≥—Ä–æ–∫–∞ ' + destr_player.name)
                                                else:
                                                    bot.send_message(player, '–í—ã —Ä–∞–∑—Ä—É—à–∏–ª–∏'  + ' —É –∏–≥—Ä–æ–∫–∞ ' + destr_player.name +'\n'+ str(quart), reply_markup = keyboard9)
                                            
                                            if q.grave in grave_owner.b_quarts:
                                                if grave_owner.coins >= 1:
                                                    grave = True

                                                    destr_quart = quart

                                                    grave_keyboard = telebot.types.ReplyKeyboardMarkup(True)

                                                    grave_keyboard.row('–í–∑—è—Ç—å')
                                                    grave_keyboard.row('–û—Ç–º–µ–Ω–∞')

                                                    bot.send_message(grave_owner.id, "–í—ã –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –Ω–∞ —Ä—É–∫—É —Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –∫–≤–∞—Ä—Ç–∞–ª –∑–∞ –æ–¥–Ω—É –º–æ–Ω–µ—Ç—É",reply_markup = grave_keyboard)

                                                    send_to_all_membs("–•–æ–¥ –º–æ–∂–µ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–ª–∞–¥–±–∏—â–∞ —Ä–µ—à–∏—Ç, –±—Ä–∞—Ç—å –ª–∏ —Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –∫–≤–∞—Ä—Ç–∞–ª.")
                                            
                                            quart_destr = False
                                            player_destr = False
                                            
                                            char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (collect_coins and have_type_q) or lab or smithy
                                
                                if message.text == '–û—Ç–º–µ–Ω–∞':
                                    player_destr = True
                                    quart_destr = False

                                    dest_player_key()

                                    bot.send_message(cur_player.id, '–í—ã–±–µ—Ä–∏–µ –∏–≥—Ä–æ–∫–∞, —É –∫–æ–≥–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑—Ä—É—à–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑—Ä—É—à–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª—ã –µ–ø–∏—Å–∫–æ–ø–∞.',reply_markup = keyboard12)

                            if collect_coins:
                                if message.text == '–°–æ–±—Ä–∞—Ç—å –º–æ–Ω–µ—Ç—ã —Å –∫–≤–∞—Ä—Ç–æ–ª–æ–≤ üèÖ':
                                    
                                    if q.hogwarts in cur_player.b_quarts:
                                        collected_coins = 1
                                    else:
                                        collected_coins = 0

                                    collect_coins = False
                                    char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (collect_coins and have_type_q) or lab or smithy

                                    reload_play_keyboard()

                                    for quart in cur_player.b_quarts:                                        
                                        if selected_chars[char_index] == CHARACTERS[3]:
                                            if quart.type == 'üü°':
                                                
                                                collected_coins += 1
                                        
                                        if selected_chars[char_index] == CHARACTERS[4]:
                                            if quart.type == 'üîµ':
                                                
                                                collected_coins += 1

                                        if selected_chars[char_index] == CHARACTERS[5]:
                                            if quart.type == 'üü¢':
                                                collected_coins += 1

                                        if selected_chars[char_index] == CHARACTERS[7]:
                                            if quart.type == 'üî¥':
                                                
                                                collected_coins += 1
                                        
                                    cur_player.coins += collected_coins

                                    for player in players_id+waiters_id:
                                        if player == message.chat.id:
                                            bot.send_message(player, '–í—ã —Å–æ–±—Ä–∞–ª–∏ –º–æ–Ω–µ—Ç—ã —Å –∫–≤–∞—Ä—Ç–∞–ª–æ–≤ —Å–≤–æ–µ–≥–æ —Ç–∏–ø–∞: ' + collected_coins*'üèÖ', reply_markup = keyboard9)
                                        else:
                                            bot.send_message(player, cur_player.name + ' —Å–æ–±–∏—Ä–∞–µ—Ç –º–æ–Ω–µ—Ç—ã —Å –∫–≤–∞—Ä—Ç–∞–ª–æ–≤ —Å–≤–æ–µ–≥–æ —Ç–∏–ø–∞: ' + collected_coins*'üèÖ')

                            if message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ö–æ–¥ ‚ùå' and not grave:
                                char_feat = False
                            
                            if lab:
                                if message.text == '–°–±—Ä–æ—Å–∏—Ç—å –∫–∞—Ä—Ç—É üÉè':
                                    using_lab = True

                                    lab_key()

                                    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–≤–∞—Ä—Ç–∞–ª, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ 2 –º–æ–Ω–µ—Ç—ã', reply_markup = keyboard12)
                            
                            if using_lab:
                                for quart in cur_player.quarts:
                                    if message.text == quart.name:
                                        cur_player.quarts.remove(quart)
                                        q.quarts.append(quart)
                                        cur_player.coins += 2
                                        
                                        lab = False
                                        using_lab = False

                                        reload_play_keyboard()

                                        for player in players_id+waiters_id:
                                            if player == message.chat.id:
                                                bot.send_message(player, '–í—ã —Å–±—Ä–æ—Å–∏–ª–∏ –∫–∞—Ä—Ç—É –∏ –ø–æ–ª—É—á–∏–ª–∏ 2 –º–æ–Ω–µ—Ç—ã üèÖüèÖ', reply_markup = keyboard9)
                                            else:
                                                bot.send_message(player, cur_player.name + ' —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç—É –∏ –ø–æ–ª—É—á–∞–µ—Ç 2 –º–æ–Ω–µ—Ç—ã –±–ª–∞–≥–æ–¥–∞—Ä—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏')

                                if message.text == '–û—Ç–º–µ–Ω–∞':
                                    lab = True
                                    using_lab = False

                                    reload_play_keyboard()

                                    bot.send_message(cur_player.id, '–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–±—Ä–æ—Å –∫–∞—Ä—Ç', reply_markup = keyboard9)

                            if smithy:
                                if message.text == '–ü–æ–ª—É—á–∏—Ç—å –∫–≤–∞—Ä—Ç–∞–ª—ã üÉè':
                                    cur_player.coins -= 2
                                    
                                    rand_quarts = []

                                    for i in range(3):
                                        __rand_quart = ran.choice(q.quarts)
                                        cur_player.quarts.append(__rand_quart)
                                        q.quarts.remove(__rand_quart)
                                        rand_quarts.append(__rand_quart)

                                    smithy = False

                                    char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (collect_coins and have_type_q) or lab or smithy

                                    reload_play_keyboard()

                                    for player in players_id+waiters_id:
                                        if player == message.chat.id:
                                            bot.send_message(player, '–í—ã –∑–∞–ø–ª–∞—Ç–∏–ª–∏ üèÖüèÖ –∏ –ø–æ–ª—É—á–∏–ª–∏:\n\n'+'\n'.join(map(str, rand_quarts)), reply_markup = keyboard9)
                                        else:
                                            bot.send_message(player, cur_player.name + ' –±–ª–∞–≥–æ–¥–∞—Ä—è –∫—É–∑–Ω–µ –ø–ª–∞—Ç–∏—Ç üèÖüèÖ –∏ –ø–æ–ª—É—á–∞–µ—Ç 3 –∫–∞—Ä—Ç—ã –∫–≤–∞—Ä—Ç–∞–ª–æ–≤ –≤ —Ä—É–∫—É')
                           
                        if message.chat.id == grave_owner.id and grave:
                            if message.text == '–í–∑—è—Ç—å':
                                grave_owner.coins -= 1
                                grave_owner.quarts.append(destr_quart)
                                
                                grave_keyboard = telebot.types.ReplyKeyboardMarkup(True)
                                grave_keyboard.row('–ú–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ üë§' )
                                grave_keyboard.row('–ò–≥—Ä–æ–∫–∏ üë•', '–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ üé≠')
                                grave_keyboard.row('–í—ã—Ö–æ–¥')

                                for player in players_id+waiters_id:
                                    if player == grave_owner.id:
                                        bot.send_message(player,'–í—ã –∑–∞–±—Ä–∞–ª–∏ —Å–µ–±–µ —Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –∫–≤–∞—Ä—Ç–∞–ª', reply_markup = grave_keyboard)
                                    else:
                                        bot.send_message(player, grave_owner.name + ' –∑–∞–±–∏—Ä–∞–µ—Ç —Å–µ–±–µ –≤ —Ä—É–∫—É —Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –∫–≤–∞—Ä—Ç–∞–ª')

                                grave = False
                                char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (collect_coins and have_type_q) or lab or smithy
                            if message.text == '–û—Ç–º–µ–Ω–∞':
                                grave = False
                                char_feat = coins_or_cards or grave or (quart_building and enough_coins) or spec_feat or (collect_coins and have_type_q) or lab or smithy
                                send_to_all_membs(grave_owner.name+' –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –±—Ä–∞—Ç—å —Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –∫–≤–∞—Ä—Ç–∞–ª')

                    if not char_feat and not moves_start:
                            if char_index == (len(selected_chars) - 1):
                                if last_round:

                                    playing = False

                                    game_Is_Started = False

                                    winners = []

                                    stats = []

                                    first_builder.score += 4
   
                                    for player in Players:
                                        types = []

                                        for quart in player.b_quarts:
                                            
                                            player.score += quart.cost
                                            
                                            if quart == q.univer:
                                                player.score += 2

                                            if quart == q.dragon_gates:
                                                player.score += 2
                                            
                                            if quart == q.coffers:
                                                player.score += player.coins
                                            
                                            if quart == q.assem:
                                                player.score += len(player.quarts)
                                            
                                            if quart.type not in types and (quart != q.ghost):
                                                types.append(quart.type)
                                        
                                        if q.ghost in player.b_quarts:
                                            if len(types) == 4:
                                                types.append('üü£')

                                        if len(player.b_quarts) == 7 and (player.id != first_builder.id):
                                            player.score += 2
                                       
                                        if len(types) == 5:
                                            player.score += 3
                                        
                                        for j in range(len(Players)-1):
                                            if Players[j].score < Players[j+1].score:
                                                Players[j], Players[j+1] = Players[j+1], Players[j]

                                    send_to_all_membs('–í—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è.\n\n–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.\n\n–ü–æ–¥—Å—á–µ—Ç –æ—á–∫–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ö–µ–º–µ: \n‚Ä¢ –∫–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è —Å—Ç–æ–ª—å–∫–æ –æ—á–∫–æ–≤, –∫–∞–∫–æ–≤–∞ —Å—É–º–º–∞—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö –∫–≤–∞—Ä—Ç–∞–ª–æ–≤ –µ–≥–æ –≥–æ—Ä–æ–¥–∞;\n‚Ä¢ –µ—Å–ª–∏ —É –∏–≥—Ä–æ–∫–∞ –≤ –≥–æ—Ä–æ–¥–µ –µ—Å—Ç—å –∫–≤–∞—Ä—Ç–∞–ª—ã –≤—Å–µ—Ö –ø—è—Ç–∏ –≤–∏–¥–æ–≤, –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç 3 –±–æ–Ω—É—Å–Ω—ã—Ö –æ—á–∫–∞; \n‚Ä¢ –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –ø–µ—Ä–≤—ã–º –¥–æ—Å—Ç—Ä–æ–∏–ª –≥–æ—Ä–æ–¥, –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç 4 –±–æ–Ω—É—Å–Ω—ã—Ö –æ—á–∫–∞;\n‚Ä¢ –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ —É—Å–ø–µ–ª –¥–æ—Å—Ç—Ä–æ–∏—Ç—å –≥–æ—Ä–æ–¥ (–Ω–æ –Ω–µ –ø–µ—Ä–≤—ã–º), –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç 2 –±–æ–Ω—É—Å–Ω—ã—Ö –æ—á–∫–∞;\n‚Ä¢ –∫–∞—Ä—Ç—ã –±–æ–Ω—É—Å–Ω—ã—Ö –∫–≤–∞—Ä—Ç–∞–ª–æ–≤ –ø—Ä–∏–Ω–æ—Å—è—Ç –∏–≥—Ä–æ–∫–∞–º –æ—á–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–µ–∫—Å—Ç—É –Ω–∞ –Ω–∏—Ö.', key.keyboard5)
                                    
                                    send_to_all_membs('–ò—Ç–æ–≥–∏ –∏–≥—Ä—ã:\n\n'+'\n'.join(map(str, Players)))
                                    
                                    max_score = Players[0].score

                                    for player in Players:
                                        if player.score == max_score:
                                            winners.append(player.name)

                                        stats.append(player.name + '  ' + str(player.score))
                                        player.coins = 2
                                        player.chars.clear()
                                        player.quarts.clear()
                                        player.b_quarts.clear()
                                        player.score = 0

                                    send_to_all_membs('–ò–º—è | –æ—á–∫–∏:\n\n'+'\n'.join(map(str, stats)))

                                    if len(winners) > 1:
                                        send_to_all_membs('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π: '+', '.join(map(str, winners))+' ü•≥')
                                    elif len(winners) == 1:
                                         send_to_all_membs('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è: '+ winners[0]+' ü•≥')

                                    send_to_all_membs('–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É, –≤–≤–µ–¥–∏—Ç–µ "—Å—Ç–∞—Ä—Ç". –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≥–æ–ª–æ—Å—É—é—Ç –≤—Å–µ, –∏–≥—Ä–∞ –Ω–∞—á–Ω–µ—Ç—Å—è')
                                   
                                    choising = True
                                    ACTIVE_CHARS = [
                                        '1Ô∏è‚É£ '+'–ê—Å—Å–∞—Å–∏–Ω ' + chr(0x1F977),
                                        '2Ô∏è‚É£ '+'–í–æ—Ä ' + chr(0x1F9B9),
                                        '3Ô∏è‚É£ '+'–ß–∞—Ä–æ–¥–µ–π ' + chr(0x1F9D9),
                                        '4Ô∏è‚É£ '+'–ö–æ—Ä–æ–ª—å ' +  chr(0x1F934) ,
                                        '5Ô∏è‚É£ '+'–ï–ø–∏—Å–∫–æ–ø '  + chr(0x1F473),
                                        '6Ô∏è‚É£ '+'–ö—É–ø–µ—Ü '  + chr(0x1F935),
                                        '7Ô∏è‚É£ '+'–ó–æ–¥—á–∏–π '  + chr(0x1F477),
                                        '8Ô∏è‚É£ '+'–ö–æ–Ω–¥–æ—Ç—å–µ—Ä '  +  chr(0x1F482),
                                        ]
                                    CLOSED_CARD = []
                                    OPENED_CARDS.clear()
                                    draft_index = 0
                                    rounds_start = True 
                                    draft_start = True   
                                    games_start = True
                                    selected_chars = []
                                    moves_start = False
                                    char_feat = False
                                    taken_cards.clear()
                                    taking_cards = False
                                    cur_player = Player()
                                    char_index = 0
                                    coins_or_cards = True
                                    taken_cards = []
                                    games_start = True
                                    quart_building = True
                                    round_index = 1
                                    quart_choising = False
                                    enough_coins = False 
                                    start_voters.clear()
                                    arch_builds = 3
                                    last_round = False
                                    first_builder = Player()

                                    players_id += waiters_id
                                    players_names += waiters_names

                                    for waiter in waiters_id:
                                        bot.send_message(waiter,'–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç–µ—Å—å –∫ –∏–≥—Ä–µ.', reply_markup = key.keyboard5)
                                        player = Player()
                                        player.id = waiter
                                        player.name = waiters_names[waiters_id.index(waiter)]
                                        Players.append(player)

                                    waiters_id.clear()
                                    waiters_names.clear()

                                    q.quarts = []
                                    for quart in q.QUARTS:
                                        q.quarts.append(quart)

                                else:
                                    for player in Players:
                                        player.chars.clear() 

                                    char_index = 0

                                    round_index += 1

                                    selected_chars.clear()

                                    send_to_all_membs('–í—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è.\n\n–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥')                                    
                                    
                                    draft_start = True
                                    
                                    choising = True

                                    robbed_char = Player()

                                    arch_builds = 3
                                    
                                    ACTIVE_CHARS = [
                                        '1Ô∏è‚É£ '+'–ê—Å—Å–∞—Å–∏–Ω ' + chr(0x1F977),
                                        '2Ô∏è‚É£ '+'–í–æ—Ä ' + chr(0x1F9B9),
                                        '3Ô∏è‚É£ '+'–ß–∞—Ä–æ–¥–µ–π ' + chr(0x1F9D9),
                                        '4Ô∏è‚É£ '+'–ö–æ—Ä–æ–ª—å ' +  chr(0x1F934) ,
                                        '5Ô∏è‚É£ '+'–ï–ø–∏—Å–∫–æ–ø '  + chr(0x1F473),
                                        '6Ô∏è‚É£ '+'–ö—É–ø–µ—Ü '  + chr(0x1F935),
                                        '7Ô∏è‚É£ '+'–ó–æ–¥—á–∏–π '  + chr(0x1F477),
                                        '8Ô∏è‚É£ '+'–ö–æ–Ω–¥–æ—Ç—å–µ—Ä '  +  chr(0x1F482)
                                        ]
                                    
                                    draft_index = 0
                                    
                                    OPENED_CARDS.clear()
                                    
                                    playing = False
                                
                                    if len(players_id) >= 3 and (len(players_id) <= 7):

                                            draft3_7()

                                            time.sleep(1)
                                            
                                            if len(players_id) != 7 and (len(players_id) != 3):
                                                send_to_all_membs('–†–∞—É–Ω–¥ '+ str(round_index) + '\n\n–û—Ç–∫—Ä—ã—Ç—ã–µ –∫–∞—Ä—Ç—ã: \n' + '\n'.join(map(str, OPENED_CARDS)) + '\n\n' + '–ó–∞–∫—Ä—ã—Ç–∞—è –∫–∞—Ä—Ç–∞: üÉè', key.keyboard7)

                                            time.sleep(1)

                                            send_to_all_membs('–í–ª–∞–¥–µ–ª–µ—Ü –∫–æ—Ä–æ–Ω—ã: ' + players_names[0] + ' üëë\n\n' + '–û—á–µ—Ä–µ–¥—å –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π:\n' + '\n'.join(map(str, players_names)), key.keyboard7)
                                    
                                    elif len(players_id) == 2:
                                    
                                            draft2()

                                            time.sleep(1)

                                            send_to_all_membs('–†–∞—É–Ω–¥ ' + str(round_index)+'\n' + '–í–ª–∞–¥–µ–ª–µ—Ü –∫–æ—Ä–æ–Ω—ã: ' + players_names[0] + ' üëë\n\n', key.keyboard7)
                                    
                                    reload_keyboard()

                                    your_turn()                                                                              
                            else:   
                                    moves_start = True                           
                                    char_index = char_index + 1
                    
                    if moves_start:
                        for player in Players:
                            if selected_chars[char_index] in player.chars:


                                coins_or_cards = True
                                quart_building = True
                                enough_coins = False
                                have_type_q = False

                                char_feat = True
                                
                                spec_feat = True
                            
                                cur_player = player
                                
                                for quart in cur_player.b_quarts:
                                    if selected_chars[char_index] == CHARACTERS[3]:
                                        if quart.type == 'üü°':
                                            have_type_q = True
                                            break
                                    if selected_chars[char_index] == CHARACTERS[4]:
                                        if quart.type == 'üîµ':
                                            have_type_q = True
                                            break
                                    if selected_chars[char_index] == CHARACTERS[5]:
                                        if quart.type == 'üü¢':
                                            have_type_q = True
                                            break
                                    if selected_chars[char_index] == CHARACTERS[7]:
                                        if quart.type == 'üî¥':
                                            have_type_q = True
                                            break
                                    if quart == q.hogwarts:
                                        have_type_q = True
                                        break
                                        
                                send_to_all_membs('–•–æ–¥–∏—Ç: ' + selected_chars[char_index] + '\n–ò–≥—Ä–æ–∫: ' + players_names[players_id.index(player.id)], keyboard8)

                                if robbed_char == selected_chars[char_index]:
                                    send_to_all_membs('–û–Ω –±—ã–ª –æ–±–≤–æ—Ä–æ–≤–∞–Ω, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–µ–¥–∞–µ—Ç –≤—Å–µ —Å–≤–æ–∏ –º–æ–Ω–µ—Ç—ã –≤–æ—Ä—É.')
                                    
                                    thief.coins += cur_player.coins
                                    
                                    cur_player.coins = 0

                                    robbed_char = ''

                                if selected_chars[char_index] == CHARACTERS[3]:
                                    spec_feat = False
                                    while players_id[0] != player.id:
                                        players_id.append(players_id.pop(0))
                                        players_names.append(players_names.pop(0))
                                        
                                    for pid in players_id+waiters_id:
                                        if pid != cur_player.id:
                                            bot.send_message(pid, player.name +  ' –ø–æ–ª—É—á–∞–µ—Ç –∫–æ—Ä–æ–Ω—É üëë –∏ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ä–∞—É–Ω–¥–µ –±—É–¥–µ—Ç –ø–µ—Ä–≤—ã–º –≤—ã–±–∏—Ä–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞')
                                        else:
                                            bot.send_message(pid, '–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –∫–æ—Ä–æ–Ω—É üëë –∏ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ä–∞—É–Ω–¥–µ –±—É–¥–µ—Ç–µ –ø–µ—Ä–≤—ã–º –≤—ã–±–∏—Ä–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞')

                                if selected_chars[char_index] == CHARACTERS[5]:
                                    spec_feat = False
                                    cur_player.coins += 1
                                    for _player in Players:
                                        if _player.id != cur_player.id:
                                            bot.send_message(_player.id, player.name +  ' –∫–∞–∫ –∫—É–ø–µ—Ü –ø–æ–ª—É—á–∞–µ—Ç –æ–¥–Ω—É –±–æ–Ω—É—Å–Ω—É—é –º–æ–Ω–µ—Ç—É üèÖ')
                                        else:
                                            bot.send_message(_player.id, '–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ–¥–Ω—É –±–æ–Ω—É—Å–Ω—É—é –º–æ–Ω–µ—Ç—É üèÖ')

                                if (selected_chars[char_index] == CHARACTERS[4] or
                                   (selected_chars[char_index] == CHARACTERS[6])):
                                   spec_feat = False

                                if selected_chars[char_index] == CHARACTERS[6]:
                                    taken_quarts = []
                                    
                                    for i in range(2):
                                        t_quart = ran.choice(q.quarts)
                                        q.quarts.remove(t_quart)
                                        cur_player.quarts.append(t_quart)
                                        taken_quarts.append(t_quart)

                                    for _player in players_id+waiters_id:
                                        if _player == cur_player.id:
                                            bot.send_message(_player, '–ö–∞–∫ –∑–æ–¥—á–∏–π –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–≤–µ –¥–æ–ø. –∫–∞—Ä—Ç—ã:\n\n'+'\n\n'.join(map(str,taken_quarts)))
                                        else:
                                            bot.send_message(_player, cur_player.name+' –∫–∞–∫ –∑–æ–¥—á–∏–π –ø–æ–ª—É—á–∞–µ—Ç –¥–≤–µ –¥–æ–ø. –∫–∞—Ä—Ç—ã –∫–≤–∞—Ä—Ç–∞–ª–æ–≤')

                                if ((selected_chars[char_index] == CHARACTERS[3]) or
                                    (selected_chars[char_index] == CHARACTERS[4]) or 
                                    (selected_chars[char_index] == CHARACTERS[5]) or
                                    (selected_chars[char_index] == CHARACTERS[7])):
                                    
                                    collect_coins = True 
                               
                                else:
                                    collect_coins = False
                                    
                                lab = False    
                                if q.lab in cur_player.b_quarts:
                                    lab = True

                                smithy = False
                                if q.smithy in cur_player.b_quarts and (cur_player.coins >= 2):
                                    smithy = True

                                enough_coins = False
                                for quart in cur_player.quarts:
                                    if cur_player.coins >= quart.cost and (quart not in cur_player.b_quarts):
                                        enough_coins = True
                                        break

                                reload_play_keyboard()

                                bot.send_message(player.id, '–í–∞—à —Ö–æ–¥. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup = keyboard9)
                                
                                moves_start = False  

                                break  

  mes_sync = True


try:                                        
    bot.polling(none_stop=True, interval=0)
except requests.exceptions.ReadTimeout:
    print("–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º\n")
    bot.polling(none_stop=True, interval=0)
